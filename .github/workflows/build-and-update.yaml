name: Build & Update Manifest

on:
  push:
    paths:
      - 'app/**'
      - '.github/workflows/build-and-update.yaml'

env:
  AWS_REGION: us-west-2
  ECR_REPO: rest-api
  CLUSTER_NAME: three-tier-cluster

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image
        run: |
          IMAGE_TAG=backend-service-${{ github.sha }}
          docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:$IMAGE_TAG /Application
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:$IMAGE_TAG
          echo "IMAGE=$IMAGE_TAG" >> $GITHUB_ENV
          echo "REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV

      # - name: SonarQube Scan
      #   uses: sonarsource/sonarqube-scan-action@master
      #   with:
      #     args: >
      #       -Dsonar.projectKey=backend-service
      #       -Dsonar.sources=.
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # - name: Twistlock (Prisma Cloud) Scan
      #   run: |
      #     curl -k -u ${{ secrets.TWISTLOCK_USER }}:${{ secrets.TWISTLOCK_PASSWORD }} \
      #       https://${{ secrets.TWISTLOCK_CONSOLE_URL }}/api/v1/util/twistcli \
      #       -o twistcli && chmod +x twistcli

      #     ./twistcli images scan \
      #       --address https://${{ secrets.TWISTLOCK_CONSOLE_URL }} \
      #       --user ${{ secrets.TWISTLOCK_USER }} \
      #       --password ${{ secrets.TWISTLOCK_PASSWORD }} \
      #       $REGISTRY/$ECR_REPO:$IMAGE

      - name: Update manifest with new image tag
        run: |
          sed -i "s|image:.*|image: $REGISTRY/$ECR_REPO:$IMAGE|" ../../K8s Manifest - Hot/deployment.yaml

      - name: Commit and push manifest
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add manifests/deployment.yaml
          git commit -m "Update image to $IMAGE"
          git push